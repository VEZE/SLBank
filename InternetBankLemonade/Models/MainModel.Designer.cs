//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MainModel", "FK_Account_ToCurrencyRates", "CurrencyRates", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.CurrencyRates), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Account), true)]
[assembly: EdmRelationshipAttribute("MainModel", "FK_Account_ToUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.Users), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Account), true)]
[assembly: EdmRelationshipAttribute("MainModel", "FK_Orders_ToAccount", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.Account), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Orders), true)]
[assembly: EdmRelationshipAttribute("MainModel", "FK_AutoPay_ToServices", "Services", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.Services), "AutoPay", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.AutoPay), true)]
[assembly: EdmRelationshipAttribute("MainModel", "FK_Orders_ToCurrencyRates", "CurrencyRates", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.CurrencyRates), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Orders), true)]
[assembly: EdmRelationshipAttribute("MainModel", "FK_Services_ToCurrencyRates", "CurrencyRates", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.CurrencyRates), "Services", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Services), true)]
[assembly: EdmRelationshipAttribute("MainModel", "FK_Orders_ToServices", "Services", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.Services), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Orders), true)]
[assembly: EdmRelationshipAttribute("MainModel", "FK_Orders_ToUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.Users), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Orders), true)]
[assembly: EdmRelationshipAttribute("MainModel", "FK_Users_ToPassports", "Passports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.Passports), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Users), true)]
[assembly: EdmRelationshipAttribute("MainModel", "FK_Users_ToSessonKeys", "SessionKeys", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.SessionKeys), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Users), true)]

#endregion

namespace InternetBankLemonade.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MainEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MainEntities object using the connection string found in the 'MainEntities' section of the application configuration file.
        /// </summary>
        public MainEntities() : base("name=MainEntities", "MainEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MainEntities object.
        /// </summary>
        public MainEntities(string connectionString) : base(connectionString, "MainEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MainEntities object.
        /// </summary>
        public MainEntities(EntityConnection connection) : base(connection, "MainEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Account
        {
            get
            {
                if ((_Account == null))
                {
                    _Account = base.CreateObjectSet<Account>("Account");
                }
                return _Account;
            }
        }
        private ObjectSet<Account> _Account;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AutoPay> AutoPay
        {
            get
            {
                if ((_AutoPay == null))
                {
                    _AutoPay = base.CreateObjectSet<AutoPay>("AutoPay");
                }
                return _AutoPay;
            }
        }
        private ObjectSet<AutoPay> _AutoPay;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CurrencyRates> CurrencyRates
        {
            get
            {
                if ((_CurrencyRates == null))
                {
                    _CurrencyRates = base.CreateObjectSet<CurrencyRates>("CurrencyRates");
                }
                return _CurrencyRates;
            }
        }
        private ObjectSet<CurrencyRates> _CurrencyRates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Orders> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Orders>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Orders> _Orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Passports> Passports
        {
            get
            {
                if ((_Passports == null))
                {
                    _Passports = base.CreateObjectSet<Passports>("Passports");
                }
                return _Passports;
            }
        }
        private ObjectSet<Passports> _Passports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Services> Services
        {
            get
            {
                if ((_Services == null))
                {
                    _Services = base.CreateObjectSet<Services>("Services");
                }
                return _Services;
            }
        }
        private ObjectSet<Services> _Services;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SessionKeys> SessionKeys
        {
            get
            {
                if ((_SessionKeys == null))
                {
                    _SessionKeys = base.CreateObjectSet<SessionKeys>("SessionKeys");
                }
                return _SessionKeys;
            }
        }
        private ObjectSet<SessionKeys> _SessionKeys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Account EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccount(Account account)
        {
            base.AddObject("Account", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AutoPay EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAutoPay(AutoPay autoPay)
        {
            base.AddObject("AutoPay", autoPay);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CurrencyRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencyRates(CurrencyRates currencyRates)
        {
            base.AddObject("CurrencyRates", currencyRates);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Orders orders)
        {
            base.AddObject("Orders", orders);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Passports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPassports(Passports passports)
        {
            base.AddObject("Passports", passports);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Services EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServices(Services services)
        {
            base.AddObject("Services", services);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SessionKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessionKeys(SessionKeys sessionKeys)
        {
            base.AddObject("SessionKeys", sessionKeys);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cardNumber">Initial value of the CardNumber property.</param>
        /// <param name="currencyId">Initial value of the CurrencyId property.</param>
        /// <param name="cardType">Initial value of the CardType property.</param>
        /// <param name="expDate">Initial value of the ExpDate property.</param>
        /// <param name="moneyAmount">Initial value of the MoneyAmount property.</param>
        /// <param name="accountNumber">Initial value of the AccountNumber property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        /// <param name="isLocked">Initial value of the IsLocked property.</param>
        public static Account CreateAccount(global::System.String id, global::System.String cardNumber, global::System.String currencyId, global::System.String cardType, global::System.DateTime expDate, global::System.Double moneyAmount, global::System.String accountNumber, global::System.String ownerId, global::System.Boolean isLocked)
        {
            Account account = new Account();
            account.Id = id;
            account.CardNumber = cardNumber;
            account.CurrencyId = currencyId;
            account.CardType = cardType;
            account.ExpDate = expDate;
            account.MoneyAmount = moneyAmount;
            account.AccountNumber = accountNumber;
            account.OwnerId = ownerId;
            account.IsLocked = isLocked;
            return account;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardNumber
        {
            get
            {
                return _CardNumber;
            }
            set
            {
                OnCardNumberChanging(value);
                ReportPropertyChanging("CardNumber");
                _CardNumber = StructuralObject.SetValidValue(value, false, "CardNumber");
                ReportPropertyChanged("CardNumber");
                OnCardNumberChanged();
            }
        }
        private global::System.String _CardNumber;
        partial void OnCardNumberChanging(global::System.String value);
        partial void OnCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                OnCurrencyIdChanging(value);
                ReportPropertyChanging("CurrencyId");
                _CurrencyId = StructuralObject.SetValidValue(value, false, "CurrencyId");
                ReportPropertyChanged("CurrencyId");
                OnCurrencyIdChanged();
            }
        }
        private global::System.String _CurrencyId;
        partial void OnCurrencyIdChanging(global::System.String value);
        partial void OnCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardType
        {
            get
            {
                return _CardType;
            }
            set
            {
                OnCardTypeChanging(value);
                ReportPropertyChanging("CardType");
                _CardType = StructuralObject.SetValidValue(value, false, "CardType");
                ReportPropertyChanged("CardType");
                OnCardTypeChanged();
            }
        }
        private global::System.String _CardType;
        partial void OnCardTypeChanging(global::System.String value);
        partial void OnCardTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpDate
        {
            get
            {
                return _ExpDate;
            }
            set
            {
                OnExpDateChanging(value);
                ReportPropertyChanging("ExpDate");
                _ExpDate = StructuralObject.SetValidValue(value, "ExpDate");
                ReportPropertyChanged("ExpDate");
                OnExpDateChanged();
            }
        }
        private global::System.DateTime _ExpDate;
        partial void OnExpDateChanging(global::System.DateTime value);
        partial void OnExpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MoneyAmount
        {
            get
            {
                return _MoneyAmount;
            }
            set
            {
                OnMoneyAmountChanging(value);
                ReportPropertyChanging("MoneyAmount");
                _MoneyAmount = StructuralObject.SetValidValue(value, "MoneyAmount");
                ReportPropertyChanged("MoneyAmount");
                OnMoneyAmountChanged();
            }
        }
        private global::System.Double _MoneyAmount;
        partial void OnMoneyAmountChanging(global::System.Double value);
        partial void OnMoneyAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, false, "AccountNumber");
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.String _AccountNumber;
        partial void OnAccountNumberChanging(global::System.String value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value, false, "OwnerId");
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.String _OwnerId;
        partial void OnOwnerIdChanging(global::System.String value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value, "IsLocked");
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private global::System.Boolean _IsLocked;
        partial void OnIsLockedChanging(global::System.Boolean value);
        partial void OnIsLockedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Account_ToCurrencyRates", "CurrencyRates")]
        public CurrencyRates CurrencyRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRates>("MainModel.FK_Account_ToCurrencyRates", "CurrencyRates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRates>("MainModel.FK_Account_ToCurrencyRates", "CurrencyRates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyRates> CurrencyRatesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRates>("MainModel.FK_Account_ToCurrencyRates", "CurrencyRates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyRates>("MainModel.FK_Account_ToCurrencyRates", "CurrencyRates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Account_ToUsers", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("MainModel.FK_Account_ToUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("MainModel.FK_Account_ToUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("MainModel.FK_Account_ToUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("MainModel.FK_Account_ToUsers", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Orders_ToAccount", "Orders")]
        public EntityCollection<Orders> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Orders>("MainModel.FK_Orders_ToAccount", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Orders>("MainModel.FK_Orders_ToAccount", "Orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainModel", Name="AutoPay")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AutoPay : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AutoPay object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="cardNumber">Initial value of the CardNumber property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="serviceId">Initial value of the ServiceId property.</param>
        /// <param name="moneyAmount">Initial value of the MoneyAmount property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        public static AutoPay CreateAutoPay(global::System.String id, global::System.String email, global::System.String cardNumber, global::System.String number, global::System.String serviceId, global::System.Double moneyAmount, global::System.DateTime creationDate)
        {
            AutoPay autoPay = new AutoPay();
            autoPay.Id = id;
            autoPay.Email = email;
            autoPay.CardNumber = cardNumber;
            autoPay.Number = number;
            autoPay.ServiceId = serviceId;
            autoPay.MoneyAmount = moneyAmount;
            autoPay.CreationDate = creationDate;
            return autoPay;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardNumber
        {
            get
            {
                return _CardNumber;
            }
            set
            {
                OnCardNumberChanging(value);
                ReportPropertyChanging("CardNumber");
                _CardNumber = StructuralObject.SetValidValue(value, false, "CardNumber");
                ReportPropertyChanged("CardNumber");
                OnCardNumberChanged();
            }
        }
        private global::System.String _CardNumber;
        partial void OnCardNumberChanging(global::System.String value);
        partial void OnCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                OnServiceIdChanging(value);
                ReportPropertyChanging("ServiceId");
                _ServiceId = StructuralObject.SetValidValue(value, false, "ServiceId");
                ReportPropertyChanged("ServiceId");
                OnServiceIdChanged();
            }
        }
        private global::System.String _ServiceId;
        partial void OnServiceIdChanging(global::System.String value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MoneyAmount
        {
            get
            {
                return _MoneyAmount;
            }
            set
            {
                OnMoneyAmountChanging(value);
                ReportPropertyChanging("MoneyAmount");
                _MoneyAmount = StructuralObject.SetValidValue(value, "MoneyAmount");
                ReportPropertyChanged("MoneyAmount");
                OnMoneyAmountChanged();
            }
        }
        private global::System.Double _MoneyAmount;
        partial void OnMoneyAmountChanging(global::System.Double value);
        partial void OnMoneyAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_AutoPay_ToServices", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("MainModel.FK_AutoPay_ToServices", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("MainModel.FK_AutoPay_ToServices", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("MainModel.FK_AutoPay_ToServices", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("MainModel.FK_AutoPay_ToServices", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainModel", Name="CurrencyRates")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CurrencyRates : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CurrencyRates object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="currencyCode">Initial value of the CurrencyCode property.</param>
        /// <param name="amountInBaseCurrency">Initial value of the AmountInBaseCurrency property.</param>
        /// <param name="currencySetDate">Initial value of the CurrencySetDate property.</param>
        public static CurrencyRates CreateCurrencyRates(global::System.String id, global::System.String currencyCode, global::System.Double amountInBaseCurrency, global::System.DateTime currencySetDate)
        {
            CurrencyRates currencyRates = new CurrencyRates();
            currencyRates.Id = id;
            currencyRates.CurrencyCode = currencyCode;
            currencyRates.AmountInBaseCurrency = amountInBaseCurrency;
            currencyRates.CurrencySetDate = currencySetDate;
            return currencyRates;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyCode
        {
            get
            {
                return _CurrencyCode;
            }
            set
            {
                OnCurrencyCodeChanging(value);
                ReportPropertyChanging("CurrencyCode");
                _CurrencyCode = StructuralObject.SetValidValue(value, false, "CurrencyCode");
                ReportPropertyChanged("CurrencyCode");
                OnCurrencyCodeChanged();
            }
        }
        private global::System.String _CurrencyCode;
        partial void OnCurrencyCodeChanging(global::System.String value);
        partial void OnCurrencyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AmountInBaseCurrency
        {
            get
            {
                return _AmountInBaseCurrency;
            }
            set
            {
                OnAmountInBaseCurrencyChanging(value);
                ReportPropertyChanging("AmountInBaseCurrency");
                _AmountInBaseCurrency = StructuralObject.SetValidValue(value, "AmountInBaseCurrency");
                ReportPropertyChanged("AmountInBaseCurrency");
                OnAmountInBaseCurrencyChanged();
            }
        }
        private global::System.Double _AmountInBaseCurrency;
        partial void OnAmountInBaseCurrencyChanging(global::System.Double value);
        partial void OnAmountInBaseCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CurrencySetDate
        {
            get
            {
                return _CurrencySetDate;
            }
            set
            {
                OnCurrencySetDateChanging(value);
                ReportPropertyChanging("CurrencySetDate");
                _CurrencySetDate = StructuralObject.SetValidValue(value, "CurrencySetDate");
                ReportPropertyChanged("CurrencySetDate");
                OnCurrencySetDateChanged();
            }
        }
        private global::System.DateTime _CurrencySetDate;
        partial void OnCurrencySetDateChanging(global::System.DateTime value);
        partial void OnCurrencySetDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Account_ToCurrencyRates", "Account")]
        public EntityCollection<Account> Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("MainModel.FK_Account_ToCurrencyRates", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("MainModel.FK_Account_ToCurrencyRates", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Orders_ToCurrencyRates", "Orders")]
        public EntityCollection<Orders> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Orders>("MainModel.FK_Orders_ToCurrencyRates", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Orders>("MainModel.FK_Orders_ToCurrencyRates", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Services_ToCurrencyRates", "Services")]
        public EntityCollection<Services> Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Services>("MainModel.FK_Services_ToCurrencyRates", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Services>("MainModel.FK_Services_ToCurrencyRates", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainModel", Name="Orders")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Orders : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Orders object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        /// <param name="serviceId">Initial value of the ServiceId property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="orderDate">Initial value of the OrderDate property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="currencyId">Initial value of the CurrencyId property.</param>
        /// <param name="moneyAmount">Initial value of the MoneyAmount property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Orders CreateOrders(global::System.String id, global::System.String ownerId, global::System.String serviceId, global::System.String accountId, global::System.DateTime orderDate, global::System.DateTime transactionDate, global::System.String currencyId, global::System.Double moneyAmount, global::System.String status)
        {
            Orders orders = new Orders();
            orders.Id = id;
            orders.OwnerId = ownerId;
            orders.ServiceId = serviceId;
            orders.AccountId = accountId;
            orders.OrderDate = orderDate;
            orders.TransactionDate = transactionDate;
            orders.CurrencyId = currencyId;
            orders.MoneyAmount = moneyAmount;
            orders.Status = status;
            return orders;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value, false, "OwnerId");
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.String _OwnerId;
        partial void OnOwnerIdChanging(global::System.String value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                OnServiceIdChanging(value);
                ReportPropertyChanging("ServiceId");
                _ServiceId = StructuralObject.SetValidValue(value, false, "ServiceId");
                ReportPropertyChanged("ServiceId");
                OnServiceIdChanged();
            }
        }
        private global::System.String _ServiceId;
        partial void OnServiceIdChanging(global::System.String value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value, false, "AccountId");
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.String _AccountId;
        partial void OnAccountIdChanging(global::System.String value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value, "OrderDate");
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTime value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value, "TransactionDate");
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                OnCurrencyIdChanging(value);
                ReportPropertyChanging("CurrencyId");
                _CurrencyId = StructuralObject.SetValidValue(value, false, "CurrencyId");
                ReportPropertyChanged("CurrencyId");
                OnCurrencyIdChanged();
            }
        }
        private global::System.String _CurrencyId;
        partial void OnCurrencyIdChanging(global::System.String value);
        partial void OnCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sign
        {
            get
            {
                return _Sign;
            }
            set
            {
                OnSignChanging(value);
                ReportPropertyChanging("Sign");
                _Sign = StructuralObject.SetValidValue(value, true, "Sign");
                ReportPropertyChanged("Sign");
                OnSignChanged();
            }
        }
        private global::System.String _Sign;
        partial void OnSignChanging(global::System.String value);
        partial void OnSignChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MoneyAmount
        {
            get
            {
                return _MoneyAmount;
            }
            set
            {
                OnMoneyAmountChanging(value);
                ReportPropertyChanging("MoneyAmount");
                _MoneyAmount = StructuralObject.SetValidValue(value, "MoneyAmount");
                ReportPropertyChanged("MoneyAmount");
                OnMoneyAmountChanged();
            }
        }
        private global::System.Double _MoneyAmount;
        partial void OnMoneyAmountChanging(global::System.Double value);
        partial void OnMoneyAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Orders_ToAccount", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("MainModel.FK_Orders_ToAccount", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("MainModel.FK_Orders_ToAccount", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("MainModel.FK_Orders_ToAccount", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("MainModel.FK_Orders_ToAccount", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Orders_ToCurrencyRates", "CurrencyRates")]
        public CurrencyRates CurrencyRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRates>("MainModel.FK_Orders_ToCurrencyRates", "CurrencyRates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRates>("MainModel.FK_Orders_ToCurrencyRates", "CurrencyRates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyRates> CurrencyRatesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRates>("MainModel.FK_Orders_ToCurrencyRates", "CurrencyRates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyRates>("MainModel.FK_Orders_ToCurrencyRates", "CurrencyRates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Orders_ToServices", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("MainModel.FK_Orders_ToServices", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("MainModel.FK_Orders_ToServices", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("MainModel.FK_Orders_ToServices", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("MainModel.FK_Orders_ToServices", "Services", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Orders_ToUsers", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("MainModel.FK_Orders_ToUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("MainModel.FK_Orders_ToUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("MainModel.FK_Orders_ToUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("MainModel.FK_Orders_ToUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainModel", Name="Passports")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Passports : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Passports object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="passportNumber">Initial value of the PassportNumber property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Passports CreatePassports(global::System.String id, global::System.String passportNumber, global::System.Boolean isActive)
        {
            Passports passports = new Passports();
            passports.Id = id;
            passports.PassportNumber = passportNumber;
            passports.IsActive = isActive;
            return passports;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassportNumber
        {
            get
            {
                return _PassportNumber;
            }
            set
            {
                OnPassportNumberChanging(value);
                ReportPropertyChanging("PassportNumber");
                _PassportNumber = StructuralObject.SetValidValue(value, false, "PassportNumber");
                ReportPropertyChanged("PassportNumber");
                OnPassportNumberChanged();
            }
        }
        private global::System.String _PassportNumber;
        partial void OnPassportNumberChanging(global::System.String value);
        partial void OnPassportNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Users_ToPassports", "Users")]
        public EntityCollection<Users> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Users>("MainModel.FK_Users_ToPassports", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Users>("MainModel.FK_Users_ToPassports", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainModel", Name="Services")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Services : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Services object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="serviceName">Initial value of the ServiceName property.</param>
        /// <param name="serviceNumber">Initial value of the ServiceNumber property.</param>
        /// <param name="serviceCurrencyId">Initial value of the ServiceCurrencyId property.</param>
        public static Services CreateServices(global::System.String id, global::System.String serviceName, global::System.String serviceNumber, global::System.String serviceCurrencyId)
        {
            Services services = new Services();
            services.Id = id;
            services.ServiceName = serviceName;
            services.ServiceNumber = serviceNumber;
            services.ServiceCurrencyId = serviceCurrencyId;
            return services;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceName
        {
            get
            {
                return _ServiceName;
            }
            set
            {
                OnServiceNameChanging(value);
                ReportPropertyChanging("ServiceName");
                _ServiceName = StructuralObject.SetValidValue(value, false, "ServiceName");
                ReportPropertyChanged("ServiceName");
                OnServiceNameChanged();
            }
        }
        private global::System.String _ServiceName;
        partial void OnServiceNameChanging(global::System.String value);
        partial void OnServiceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceNumber
        {
            get
            {
                return _ServiceNumber;
            }
            set
            {
                OnServiceNumberChanging(value);
                ReportPropertyChanging("ServiceNumber");
                _ServiceNumber = StructuralObject.SetValidValue(value, false, "ServiceNumber");
                ReportPropertyChanged("ServiceNumber");
                OnServiceNumberChanged();
            }
        }
        private global::System.String _ServiceNumber;
        partial void OnServiceNumberChanging(global::System.String value);
        partial void OnServiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceCurrencyId
        {
            get
            {
                return _ServiceCurrencyId;
            }
            set
            {
                OnServiceCurrencyIdChanging(value);
                ReportPropertyChanging("ServiceCurrencyId");
                _ServiceCurrencyId = StructuralObject.SetValidValue(value, false, "ServiceCurrencyId");
                ReportPropertyChanged("ServiceCurrencyId");
                OnServiceCurrencyIdChanged();
            }
        }
        private global::System.String _ServiceCurrencyId;
        partial void OnServiceCurrencyIdChanging(global::System.String value);
        partial void OnServiceCurrencyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_AutoPay_ToServices", "AutoPay")]
        public EntityCollection<AutoPay> AutoPay
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AutoPay>("MainModel.FK_AutoPay_ToServices", "AutoPay");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AutoPay>("MainModel.FK_AutoPay_ToServices", "AutoPay", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Services_ToCurrencyRates", "CurrencyRates")]
        public CurrencyRates CurrencyRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRates>("MainModel.FK_Services_ToCurrencyRates", "CurrencyRates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRates>("MainModel.FK_Services_ToCurrencyRates", "CurrencyRates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyRates> CurrencyRatesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRates>("MainModel.FK_Services_ToCurrencyRates", "CurrencyRates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyRates>("MainModel.FK_Services_ToCurrencyRates", "CurrencyRates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Orders_ToServices", "Orders")]
        public EntityCollection<Orders> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Orders>("MainModel.FK_Orders_ToServices", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Orders>("MainModel.FK_Orders_ToServices", "Orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainModel", Name="SessionKeys")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SessionKeys : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SessionKeys object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key1">Initial value of the Key1 property.</param>
        /// <param name="key2">Initial value of the Key2 property.</param>
        /// <param name="key3">Initial value of the Key3 property.</param>
        /// <param name="key4">Initial value of the Key4 property.</param>
        /// <param name="key5">Initial value of the Key5 property.</param>
        /// <param name="key6">Initial value of the Key6 property.</param>
        /// <param name="key7">Initial value of the Key7 property.</param>
        /// <param name="key8">Initial value of the Key8 property.</param>
        /// <param name="key9">Initial value of the Key9 property.</param>
        /// <param name="key10">Initial value of the Key10 property.</param>
        public static SessionKeys CreateSessionKeys(global::System.String id, global::System.String key1, global::System.String key2, global::System.String key3, global::System.String key4, global::System.String key5, global::System.String key6, global::System.String key7, global::System.String key8, global::System.String key9, global::System.String key10)
        {
            SessionKeys sessionKeys = new SessionKeys();
            sessionKeys.Id = id;
            sessionKeys.Key1 = key1;
            sessionKeys.Key2 = key2;
            sessionKeys.Key3 = key3;
            sessionKeys.Key4 = key4;
            sessionKeys.Key5 = key5;
            sessionKeys.Key6 = key6;
            sessionKeys.Key7 = key7;
            sessionKeys.Key8 = key8;
            sessionKeys.Key9 = key9;
            sessionKeys.Key10 = key10;
            return sessionKeys;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key1
        {
            get
            {
                return _Key1;
            }
            set
            {
                OnKey1Changing(value);
                ReportPropertyChanging("Key1");
                _Key1 = StructuralObject.SetValidValue(value, false, "Key1");
                ReportPropertyChanged("Key1");
                OnKey1Changed();
            }
        }
        private global::System.String _Key1;
        partial void OnKey1Changing(global::System.String value);
        partial void OnKey1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key2
        {
            get
            {
                return _Key2;
            }
            set
            {
                OnKey2Changing(value);
                ReportPropertyChanging("Key2");
                _Key2 = StructuralObject.SetValidValue(value, false, "Key2");
                ReportPropertyChanged("Key2");
                OnKey2Changed();
            }
        }
        private global::System.String _Key2;
        partial void OnKey2Changing(global::System.String value);
        partial void OnKey2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key3
        {
            get
            {
                return _Key3;
            }
            set
            {
                OnKey3Changing(value);
                ReportPropertyChanging("Key3");
                _Key3 = StructuralObject.SetValidValue(value, false, "Key3");
                ReportPropertyChanged("Key3");
                OnKey3Changed();
            }
        }
        private global::System.String _Key3;
        partial void OnKey3Changing(global::System.String value);
        partial void OnKey3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key4
        {
            get
            {
                return _Key4;
            }
            set
            {
                OnKey4Changing(value);
                ReportPropertyChanging("Key4");
                _Key4 = StructuralObject.SetValidValue(value, false, "Key4");
                ReportPropertyChanged("Key4");
                OnKey4Changed();
            }
        }
        private global::System.String _Key4;
        partial void OnKey4Changing(global::System.String value);
        partial void OnKey4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key5
        {
            get
            {
                return _Key5;
            }
            set
            {
                OnKey5Changing(value);
                ReportPropertyChanging("Key5");
                _Key5 = StructuralObject.SetValidValue(value, false, "Key5");
                ReportPropertyChanged("Key5");
                OnKey5Changed();
            }
        }
        private global::System.String _Key5;
        partial void OnKey5Changing(global::System.String value);
        partial void OnKey5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key6
        {
            get
            {
                return _Key6;
            }
            set
            {
                OnKey6Changing(value);
                ReportPropertyChanging("Key6");
                _Key6 = StructuralObject.SetValidValue(value, false, "Key6");
                ReportPropertyChanged("Key6");
                OnKey6Changed();
            }
        }
        private global::System.String _Key6;
        partial void OnKey6Changing(global::System.String value);
        partial void OnKey6Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key7
        {
            get
            {
                return _Key7;
            }
            set
            {
                OnKey7Changing(value);
                ReportPropertyChanging("Key7");
                _Key7 = StructuralObject.SetValidValue(value, false, "Key7");
                ReportPropertyChanged("Key7");
                OnKey7Changed();
            }
        }
        private global::System.String _Key7;
        partial void OnKey7Changing(global::System.String value);
        partial void OnKey7Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key8
        {
            get
            {
                return _Key8;
            }
            set
            {
                OnKey8Changing(value);
                ReportPropertyChanging("Key8");
                _Key8 = StructuralObject.SetValidValue(value, false, "Key8");
                ReportPropertyChanged("Key8");
                OnKey8Changed();
            }
        }
        private global::System.String _Key8;
        partial void OnKey8Changing(global::System.String value);
        partial void OnKey8Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key9
        {
            get
            {
                return _Key9;
            }
            set
            {
                OnKey9Changing(value);
                ReportPropertyChanging("Key9");
                _Key9 = StructuralObject.SetValidValue(value, false, "Key9");
                ReportPropertyChanged("Key9");
                OnKey9Changed();
            }
        }
        private global::System.String _Key9;
        partial void OnKey9Changing(global::System.String value);
        partial void OnKey9Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key10
        {
            get
            {
                return _Key10;
            }
            set
            {
                OnKey10Changing(value);
                ReportPropertyChanging("Key10");
                _Key10 = StructuralObject.SetValidValue(value, false, "Key10");
                ReportPropertyChanged("Key10");
                OnKey10Changed();
            }
        }
        private global::System.String _Key10;
        partial void OnKey10Changing(global::System.String value);
        partial void OnKey10Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastKeyName
        {
            get
            {
                return _LastKeyName;
            }
            set
            {
                OnLastKeyNameChanging(value);
                ReportPropertyChanging("LastKeyName");
                _LastKeyName = StructuralObject.SetValidValue(value, true, "LastKeyName");
                ReportPropertyChanged("LastKeyName");
                OnLastKeyNameChanged();
            }
        }
        private global::System.String _LastKeyName;
        partial void OnLastKeyNameChanging(global::System.String value);
        partial void OnLastKeyNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Users_ToSessonKeys", "Users")]
        public EntityCollection<Users> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Users>("MainModel.FK_Users_ToSessonKeys", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Users>("MainModel.FK_Users_ToSessonKeys", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MainModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="passportId">Initial value of the PassportId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="passwordHash">Initial value of the PasswordHash property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="telephone">Initial value of the Telephone property.</param>
        /// <param name="isLocked">Initial value of the IsLocked property.</param>
        /// <param name="failCount">Initial value of the FailCount property.</param>
        /// <param name="sessionKeysScopeId">Initial value of the SessionKeysScopeId property.</param>
        /// <param name="isAdmin">Initial value of the IsAdmin property.</param>
        /// <param name="isFirstLogin">Initial value of the IsFirstLogin property.</param>
        public static Users CreateUsers(global::System.String id, global::System.String passportId, global::System.String name, global::System.String surname, global::System.String lastName, global::System.String passwordHash, global::System.String email, global::System.String telephone, global::System.Boolean isLocked, global::System.Int16 failCount, global::System.String sessionKeysScopeId, global::System.Boolean isAdmin, global::System.Boolean isFirstLogin)
        {
            Users users = new Users();
            users.Id = id;
            users.PassportId = passportId;
            users.Name = name;
            users.Surname = surname;
            users.LastName = lastName;
            users.PasswordHash = passwordHash;
            users.Email = email;
            users.Telephone = telephone;
            users.IsLocked = isLocked;
            users.FailCount = failCount;
            users.SessionKeysScopeId = sessionKeysScopeId;
            users.IsAdmin = isAdmin;
            users.IsFirstLogin = isFirstLogin;
            return users;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassportId
        {
            get
            {
                return _PassportId;
            }
            set
            {
                OnPassportIdChanging(value);
                ReportPropertyChanging("PassportId");
                _PassportId = StructuralObject.SetValidValue(value, false, "PassportId");
                ReportPropertyChanged("PassportId");
                OnPassportIdChanged();
            }
        }
        private global::System.String _PassportId;
        partial void OnPassportIdChanging(global::System.String value);
        partial void OnPassportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false, "Surname");
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, false, "PasswordHash");
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, false, "Telephone");
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value, "IsLocked");
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private global::System.Boolean _IsLocked;
        partial void OnIsLockedChanging(global::System.Boolean value);
        partial void OnIsLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 FailCount
        {
            get
            {
                return _FailCount;
            }
            set
            {
                OnFailCountChanging(value);
                ReportPropertyChanging("FailCount");
                _FailCount = StructuralObject.SetValidValue(value, "FailCount");
                ReportPropertyChanged("FailCount");
                OnFailCountChanged();
            }
        }
        private global::System.Int16 _FailCount;
        partial void OnFailCountChanging(global::System.Int16 value);
        partial void OnFailCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SessionKeysScopeId
        {
            get
            {
                return _SessionKeysScopeId;
            }
            set
            {
                OnSessionKeysScopeIdChanging(value);
                ReportPropertyChanging("SessionKeysScopeId");
                _SessionKeysScopeId = StructuralObject.SetValidValue(value, false, "SessionKeysScopeId");
                ReportPropertyChanged("SessionKeysScopeId");
                OnSessionKeysScopeIdChanged();
            }
        }
        private global::System.String _SessionKeysScopeId;
        partial void OnSessionKeysScopeIdChanging(global::System.String value);
        partial void OnSessionKeysScopeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value, "IsAdmin");
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private global::System.Boolean _IsAdmin;
        partial void OnIsAdminChanging(global::System.Boolean value);
        partial void OnIsAdminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFirstLogin
        {
            get
            {
                return _IsFirstLogin;
            }
            set
            {
                OnIsFirstLoginChanging(value);
                ReportPropertyChanging("IsFirstLogin");
                _IsFirstLogin = StructuralObject.SetValidValue(value, "IsFirstLogin");
                ReportPropertyChanged("IsFirstLogin");
                OnIsFirstLoginChanged();
            }
        }
        private global::System.Boolean _IsFirstLogin;
        partial void OnIsFirstLoginChanging(global::System.Boolean value);
        partial void OnIsFirstLoginChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Account_ToUsers", "Account")]
        public EntityCollection<Account> Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("MainModel.FK_Account_ToUsers", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("MainModel.FK_Account_ToUsers", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Orders_ToUsers", "Orders")]
        public EntityCollection<Orders> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Orders>("MainModel.FK_Orders_ToUsers", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Orders>("MainModel.FK_Orders_ToUsers", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Users_ToPassports", "Passports")]
        public Passports Passports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Passports>("MainModel.FK_Users_ToPassports", "Passports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Passports>("MainModel.FK_Users_ToPassports", "Passports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Passports> PassportsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Passports>("MainModel.FK_Users_ToPassports", "Passports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Passports>("MainModel.FK_Users_ToPassports", "Passports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MainModel", "FK_Users_ToSessonKeys", "SessionKeys")]
        public SessionKeys SessionKeys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionKeys>("MainModel.FK_Users_ToSessonKeys", "SessionKeys").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionKeys>("MainModel.FK_Users_ToSessonKeys", "SessionKeys").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SessionKeys> SessionKeysReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionKeys>("MainModel.FK_Users_ToSessonKeys", "SessionKeys");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SessionKeys>("MainModel.FK_Users_ToSessonKeys", "SessionKeys", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
