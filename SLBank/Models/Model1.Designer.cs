//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("lemonadeprojectModel", "FK_Account_ToCurrencyRates", "CurrencyRates", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.CurrencyRate), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Account), true)]
[assembly: EdmRelationshipAttribute("lemonadeprojectModel", "FK_Account_ToUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.User), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Account), true)]
[assembly: EdmRelationshipAttribute("lemonadeprojectModel", "FK_Orders_ToAccount", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.Account), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Order), true)]
[assembly: EdmRelationshipAttribute("lemonadeprojectModel", "FK_Orders_ToCurrencyRates", "CurrencyRates", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.CurrencyRate), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Order), true)]
[assembly: EdmRelationshipAttribute("lemonadeprojectModel", "FK_Services_ToCurrencyRates", "CurrencyRates", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.CurrencyRate), "Services", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Service), true)]
[assembly: EdmRelationshipAttribute("lemonadeprojectModel", "FK_Orders_ToServices", "Services", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.Service), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Order), true)]
[assembly: EdmRelationshipAttribute("lemonadeprojectModel", "FK_Orders_ToUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.User), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.Order), true)]
[assembly: EdmRelationshipAttribute("lemonadeprojectModel", "FK_Users_ToPassports", "Passports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.Passport), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.User), true)]
[assembly: EdmRelationshipAttribute("lemonadeprojectModel", "FK_Users_ToSessonKeys", "SessionKeys", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InternetBankLemonade.Models.SessionKey), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InternetBankLemonade.Models.User), true)]

#endregion

namespace InternetBankLemonade.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class lemonadeprojectEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new lemonadeprojectEntities object using the connection string found in the 'lemonadeprojectEntities' section of the application configuration file.
        /// </summary>
        public lemonadeprojectEntities() : base("name=lemonadeprojectEntities", "lemonadeprojectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new lemonadeprojectEntities object.
        /// </summary>
        public lemonadeprojectEntities(string connectionString) : base(connectionString, "lemonadeprojectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new lemonadeprojectEntities object.
        /// </summary>
        public lemonadeprojectEntities(EntityConnection connection) : base(connection, "lemonadeprojectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CurrencyRate> CurrencyRates
        {
            get
            {
                if ((_CurrencyRates == null))
                {
                    _CurrencyRates = base.CreateObjectSet<CurrencyRate>("CurrencyRates");
                }
                return _CurrencyRates;
            }
        }
        private ObjectSet<CurrencyRate> _CurrencyRates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Passport> Passports
        {
            get
            {
                if ((_Passports == null))
                {
                    _Passports = base.CreateObjectSet<Passport>("Passports");
                }
                return _Passports;
            }
        }
        private ObjectSet<Passport> _Passports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Service> Services
        {
            get
            {
                if ((_Services == null))
                {
                    _Services = base.CreateObjectSet<Service>("Services");
                }
                return _Services;
            }
        }
        private ObjectSet<Service> _Services;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SessionKey> SessionKeys
        {
            get
            {
                if ((_SessionKeys == null))
                {
                    _SessionKeys = base.CreateObjectSet<SessionKey>("SessionKeys");
                }
                return _SessionKeys;
            }
        }
        private ObjectSet<SessionKey> _SessionKeys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CurrencyRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencyRates(CurrencyRate currencyRate)
        {
            base.AddObject("CurrencyRates", currencyRate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Passports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPassports(Passport passport)
        {
            base.AddObject("Passports", passport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Services EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServices(Service service)
        {
            base.AddObject("Services", service);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SessionKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessionKeys(SessionKey sessionKey)
        {
            base.AddObject("SessionKeys", sessionKey);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lemonadeprojectModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cardNumber">Initial value of the CardNumber property.</param>
        /// <param name="currencyId">Initial value of the CurrencyId property.</param>
        /// <param name="cardType">Initial value of the CardType property.</param>
        /// <param name="expDate">Initial value of the ExpDate property.</param>
        /// <param name="moneyAmount">Initial value of the MoneyAmount property.</param>
        /// <param name="accountNumber">Initial value of the AccountNumber property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        /// <param name="isLocked">Initial value of the IsLocked property.</param>
        public static Account CreateAccount(global::System.String id, global::System.String cardNumber, global::System.String currencyId, global::System.String cardType, global::System.DateTime expDate, global::System.Double moneyAmount, global::System.String accountNumber, global::System.String ownerId, global::System.Boolean isLocked)
        {
            Account account = new Account();
            account.Id = id;
            account.CardNumber = cardNumber;
            account.CurrencyId = currencyId;
            account.CardType = cardType;
            account.ExpDate = expDate;
            account.MoneyAmount = moneyAmount;
            account.AccountNumber = accountNumber;
            account.OwnerId = ownerId;
            account.IsLocked = isLocked;
            return account;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardNumber
        {
            get
            {
                return _CardNumber;
            }
            set
            {
                OnCardNumberChanging(value);
                ReportPropertyChanging("CardNumber");
                _CardNumber = StructuralObject.SetValidValue(value, false, "CardNumber");
                ReportPropertyChanged("CardNumber");
                OnCardNumberChanged();
            }
        }
        private global::System.String _CardNumber;
        partial void OnCardNumberChanging(global::System.String value);
        partial void OnCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                OnCurrencyIdChanging(value);
                ReportPropertyChanging("CurrencyId");
                _CurrencyId = StructuralObject.SetValidValue(value, false, "CurrencyId");
                ReportPropertyChanged("CurrencyId");
                OnCurrencyIdChanged();
            }
        }
        private global::System.String _CurrencyId;
        partial void OnCurrencyIdChanging(global::System.String value);
        partial void OnCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardType
        {
            get
            {
                return _CardType;
            }
            set
            {
                OnCardTypeChanging(value);
                ReportPropertyChanging("CardType");
                _CardType = StructuralObject.SetValidValue(value, false, "CardType");
                ReportPropertyChanged("CardType");
                OnCardTypeChanged();
            }
        }
        private global::System.String _CardType;
        partial void OnCardTypeChanging(global::System.String value);
        partial void OnCardTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpDate
        {
            get
            {
                return _ExpDate;
            }
            set
            {
                OnExpDateChanging(value);
                ReportPropertyChanging("ExpDate");
                _ExpDate = StructuralObject.SetValidValue(value, "ExpDate");
                ReportPropertyChanged("ExpDate");
                OnExpDateChanged();
            }
        }
        private global::System.DateTime _ExpDate;
        partial void OnExpDateChanging(global::System.DateTime value);
        partial void OnExpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MoneyAmount
        {
            get
            {
                return _MoneyAmount;
            }
            set
            {
                OnMoneyAmountChanging(value);
                ReportPropertyChanging("MoneyAmount");
                _MoneyAmount = StructuralObject.SetValidValue(value, "MoneyAmount");
                ReportPropertyChanged("MoneyAmount");
                OnMoneyAmountChanged();
            }
        }
        private global::System.Double _MoneyAmount;
        partial void OnMoneyAmountChanging(global::System.Double value);
        partial void OnMoneyAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, false, "AccountNumber");
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.String _AccountNumber;
        partial void OnAccountNumberChanging(global::System.String value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value, false, "OwnerId");
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.String _OwnerId;
        partial void OnOwnerIdChanging(global::System.String value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value, "IsLocked");
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private global::System.Boolean _IsLocked;
        partial void OnIsLockedChanging(global::System.Boolean value);
        partial void OnIsLockedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Account_ToCurrencyRates", "CurrencyRates")]
        public CurrencyRate CurrencyRate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRate>("lemonadeprojectModel.FK_Account_ToCurrencyRates", "CurrencyRates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRate>("lemonadeprojectModel.FK_Account_ToCurrencyRates", "CurrencyRates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyRate> CurrencyRateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRate>("lemonadeprojectModel.FK_Account_ToCurrencyRates", "CurrencyRates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyRate>("lemonadeprojectModel.FK_Account_ToCurrencyRates", "CurrencyRates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Account_ToUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("lemonadeprojectModel.FK_Account_ToUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("lemonadeprojectModel.FK_Account_ToUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("lemonadeprojectModel.FK_Account_ToUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("lemonadeprojectModel.FK_Account_ToUsers", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Orders_ToAccount", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("lemonadeprojectModel.FK_Orders_ToAccount", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("lemonadeprojectModel.FK_Orders_ToAccount", "Orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lemonadeprojectModel", Name="CurrencyRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CurrencyRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CurrencyRate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="currencyCode">Initial value of the CurrencyCode property.</param>
        /// <param name="amountInBaseCurrency">Initial value of the AmountInBaseCurrency property.</param>
        /// <param name="currencySetDate">Initial value of the CurrencySetDate property.</param>
        public static CurrencyRate CreateCurrencyRate(global::System.String id, global::System.String currencyCode, global::System.Double amountInBaseCurrency, global::System.DateTime currencySetDate)
        {
            CurrencyRate currencyRate = new CurrencyRate();
            currencyRate.Id = id;
            currencyRate.CurrencyCode = currencyCode;
            currencyRate.AmountInBaseCurrency = amountInBaseCurrency;
            currencyRate.CurrencySetDate = currencySetDate;
            return currencyRate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyCode
        {
            get
            {
                return _CurrencyCode;
            }
            set
            {
                OnCurrencyCodeChanging(value);
                ReportPropertyChanging("CurrencyCode");
                _CurrencyCode = StructuralObject.SetValidValue(value, false, "CurrencyCode");
                ReportPropertyChanged("CurrencyCode");
                OnCurrencyCodeChanged();
            }
        }
        private global::System.String _CurrencyCode;
        partial void OnCurrencyCodeChanging(global::System.String value);
        partial void OnCurrencyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AmountInBaseCurrency
        {
            get
            {
                return _AmountInBaseCurrency;
            }
            set
            {
                OnAmountInBaseCurrencyChanging(value);
                ReportPropertyChanging("AmountInBaseCurrency");
                _AmountInBaseCurrency = StructuralObject.SetValidValue(value, "AmountInBaseCurrency");
                ReportPropertyChanged("AmountInBaseCurrency");
                OnAmountInBaseCurrencyChanged();
            }
        }
        private global::System.Double _AmountInBaseCurrency;
        partial void OnAmountInBaseCurrencyChanging(global::System.Double value);
        partial void OnAmountInBaseCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CurrencySetDate
        {
            get
            {
                return _CurrencySetDate;
            }
            set
            {
                OnCurrencySetDateChanging(value);
                ReportPropertyChanging("CurrencySetDate");
                _CurrencySetDate = StructuralObject.SetValidValue(value, "CurrencySetDate");
                ReportPropertyChanged("CurrencySetDate");
                OnCurrencySetDateChanged();
            }
        }
        private global::System.DateTime _CurrencySetDate;
        partial void OnCurrencySetDateChanging(global::System.DateTime value);
        partial void OnCurrencySetDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Account_ToCurrencyRates", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("lemonadeprojectModel.FK_Account_ToCurrencyRates", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("lemonadeprojectModel.FK_Account_ToCurrencyRates", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Orders_ToCurrencyRates", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("lemonadeprojectModel.FK_Orders_ToCurrencyRates", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("lemonadeprojectModel.FK_Orders_ToCurrencyRates", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Services_ToCurrencyRates", "Services")]
        public EntityCollection<Service> Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Service>("lemonadeprojectModel.FK_Services_ToCurrencyRates", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Service>("lemonadeprojectModel.FK_Services_ToCurrencyRates", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lemonadeprojectModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        /// <param name="serviceId">Initial value of the ServiceId property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="orderDate">Initial value of the OrderDate property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="currencyId">Initial value of the CurrencyId property.</param>
        /// <param name="moneyAmount">Initial value of the MoneyAmount property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Order CreateOrder(global::System.String id, global::System.String ownerId, global::System.String serviceId, global::System.String accountId, global::System.DateTime orderDate, global::System.DateTime transactionDate, global::System.String currencyId, global::System.Double moneyAmount, global::System.String status)
        {
            Order order = new Order();
            order.Id = id;
            order.OwnerId = ownerId;
            order.ServiceId = serviceId;
            order.AccountId = accountId;
            order.OrderDate = orderDate;
            order.TransactionDate = transactionDate;
            order.CurrencyId = currencyId;
            order.MoneyAmount = moneyAmount;
            order.Status = status;
            return order;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value, false, "OwnerId");
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.String _OwnerId;
        partial void OnOwnerIdChanging(global::System.String value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                OnServiceIdChanging(value);
                ReportPropertyChanging("ServiceId");
                _ServiceId = StructuralObject.SetValidValue(value, false, "ServiceId");
                ReportPropertyChanged("ServiceId");
                OnServiceIdChanged();
            }
        }
        private global::System.String _ServiceId;
        partial void OnServiceIdChanging(global::System.String value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value, false, "AccountId");
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.String _AccountId;
        partial void OnAccountIdChanging(global::System.String value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value, "OrderDate");
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTime value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value, "TransactionDate");
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                OnCurrencyIdChanging(value);
                ReportPropertyChanging("CurrencyId");
                _CurrencyId = StructuralObject.SetValidValue(value, false, "CurrencyId");
                ReportPropertyChanged("CurrencyId");
                OnCurrencyIdChanged();
            }
        }
        private global::System.String _CurrencyId;
        partial void OnCurrencyIdChanging(global::System.String value);
        partial void OnCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sign
        {
            get
            {
                return _Sign;
            }
            set
            {
                OnSignChanging(value);
                ReportPropertyChanging("Sign");
                _Sign = StructuralObject.SetValidValue(value, true, "Sign");
                ReportPropertyChanged("Sign");
                OnSignChanged();
            }
        }
        private global::System.String _Sign;
        partial void OnSignChanging(global::System.String value);
        partial void OnSignChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MoneyAmount
        {
            get
            {
                return _MoneyAmount;
            }
            set
            {
                OnMoneyAmountChanging(value);
                ReportPropertyChanging("MoneyAmount");
                _MoneyAmount = StructuralObject.SetValidValue(value, "MoneyAmount");
                ReportPropertyChanged("MoneyAmount");
                OnMoneyAmountChanged();
            }
        }
        private global::System.Double _MoneyAmount;
        partial void OnMoneyAmountChanging(global::System.Double value);
        partial void OnMoneyAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Orders_ToAccount", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("lemonadeprojectModel.FK_Orders_ToAccount", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("lemonadeprojectModel.FK_Orders_ToAccount", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("lemonadeprojectModel.FK_Orders_ToAccount", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("lemonadeprojectModel.FK_Orders_ToAccount", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Orders_ToCurrencyRates", "CurrencyRates")]
        public CurrencyRate CurrencyRate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRate>("lemonadeprojectModel.FK_Orders_ToCurrencyRates", "CurrencyRates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRate>("lemonadeprojectModel.FK_Orders_ToCurrencyRates", "CurrencyRates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyRate> CurrencyRateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRate>("lemonadeprojectModel.FK_Orders_ToCurrencyRates", "CurrencyRates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyRate>("lemonadeprojectModel.FK_Orders_ToCurrencyRates", "CurrencyRates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Orders_ToServices", "Services")]
        public Service Service
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("lemonadeprojectModel.FK_Orders_ToServices", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("lemonadeprojectModel.FK_Orders_ToServices", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Service> ServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("lemonadeprojectModel.FK_Orders_ToServices", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Service>("lemonadeprojectModel.FK_Orders_ToServices", "Services", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Orders_ToUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("lemonadeprojectModel.FK_Orders_ToUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("lemonadeprojectModel.FK_Orders_ToUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("lemonadeprojectModel.FK_Orders_ToUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("lemonadeprojectModel.FK_Orders_ToUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lemonadeprojectModel", Name="Passport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Passport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Passport object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="passportNumber">Initial value of the PassportNumber property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Passport CreatePassport(global::System.String id, global::System.String passportNumber, global::System.Boolean isActive)
        {
            Passport passport = new Passport();
            passport.Id = id;
            passport.PassportNumber = passportNumber;
            passport.IsActive = isActive;
            return passport;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassportNumber
        {
            get
            {
                return _PassportNumber;
            }
            set
            {
                OnPassportNumberChanging(value);
                ReportPropertyChanging("PassportNumber");
                _PassportNumber = StructuralObject.SetValidValue(value, false, "PassportNumber");
                ReportPropertyChanged("PassportNumber");
                OnPassportNumberChanged();
            }
        }
        private global::System.String _PassportNumber;
        partial void OnPassportNumberChanging(global::System.String value);
        partial void OnPassportNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Users_ToPassports", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("lemonadeprojectModel.FK_Users_ToPassports", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("lemonadeprojectModel.FK_Users_ToPassports", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lemonadeprojectModel", Name="Service")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Service : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Service object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="serviceName">Initial value of the ServiceName property.</param>
        /// <param name="serviceNumber">Initial value of the ServiceNumber property.</param>
        /// <param name="serviceCurrencyId">Initial value of the ServiceCurrencyId property.</param>
        public static Service CreateService(global::System.String id, global::System.String serviceName, global::System.String serviceNumber, global::System.String serviceCurrencyId)
        {
            Service service = new Service();
            service.Id = id;
            service.ServiceName = serviceName;
            service.ServiceNumber = serviceNumber;
            service.ServiceCurrencyId = serviceCurrencyId;
            return service;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceName
        {
            get
            {
                return _ServiceName;
            }
            set
            {
                OnServiceNameChanging(value);
                ReportPropertyChanging("ServiceName");
                _ServiceName = StructuralObject.SetValidValue(value, false, "ServiceName");
                ReportPropertyChanged("ServiceName");
                OnServiceNameChanged();
            }
        }
        private global::System.String _ServiceName;
        partial void OnServiceNameChanging(global::System.String value);
        partial void OnServiceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceNumber
        {
            get
            {
                return _ServiceNumber;
            }
            set
            {
                OnServiceNumberChanging(value);
                ReportPropertyChanging("ServiceNumber");
                _ServiceNumber = StructuralObject.SetValidValue(value, false, "ServiceNumber");
                ReportPropertyChanged("ServiceNumber");
                OnServiceNumberChanged();
            }
        }
        private global::System.String _ServiceNumber;
        partial void OnServiceNumberChanging(global::System.String value);
        partial void OnServiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceCurrencyId
        {
            get
            {
                return _ServiceCurrencyId;
            }
            set
            {
                OnServiceCurrencyIdChanging(value);
                ReportPropertyChanging("ServiceCurrencyId");
                _ServiceCurrencyId = StructuralObject.SetValidValue(value, false, "ServiceCurrencyId");
                ReportPropertyChanged("ServiceCurrencyId");
                OnServiceCurrencyIdChanged();
            }
        }
        private global::System.String _ServiceCurrencyId;
        partial void OnServiceCurrencyIdChanging(global::System.String value);
        partial void OnServiceCurrencyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Services_ToCurrencyRates", "CurrencyRates")]
        public CurrencyRate CurrencyRate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRate>("lemonadeprojectModel.FK_Services_ToCurrencyRates", "CurrencyRates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRate>("lemonadeprojectModel.FK_Services_ToCurrencyRates", "CurrencyRates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyRate> CurrencyRateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyRate>("lemonadeprojectModel.FK_Services_ToCurrencyRates", "CurrencyRates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyRate>("lemonadeprojectModel.FK_Services_ToCurrencyRates", "CurrencyRates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Orders_ToServices", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("lemonadeprojectModel.FK_Orders_ToServices", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("lemonadeprojectModel.FK_Orders_ToServices", "Orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lemonadeprojectModel", Name="SessionKey")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SessionKey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SessionKey object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key1">Initial value of the Key1 property.</param>
        /// <param name="key2">Initial value of the Key2 property.</param>
        /// <param name="key3">Initial value of the Key3 property.</param>
        /// <param name="key4">Initial value of the Key4 property.</param>
        /// <param name="key5">Initial value of the Key5 property.</param>
        /// <param name="key6">Initial value of the Key6 property.</param>
        /// <param name="key7">Initial value of the Key7 property.</param>
        /// <param name="key8">Initial value of the Key8 property.</param>
        /// <param name="key9">Initial value of the Key9 property.</param>
        /// <param name="key10">Initial value of the Key10 property.</param>
        public static SessionKey CreateSessionKey(global::System.String id, global::System.Int32 key1, global::System.Int32 key2, global::System.Int32 key3, global::System.Int32 key4, global::System.Int32 key5, global::System.Int32 key6, global::System.Int32 key7, global::System.Int32 key8, global::System.Int32 key9, global::System.Int32 key10)
        {
            SessionKey sessionKey = new SessionKey();
            sessionKey.Id = id;
            sessionKey.Key1 = key1;
            sessionKey.Key2 = key2;
            sessionKey.Key3 = key3;
            sessionKey.Key4 = key4;
            sessionKey.Key5 = key5;
            sessionKey.Key6 = key6;
            sessionKey.Key7 = key7;
            sessionKey.Key8 = key8;
            sessionKey.Key9 = key9;
            sessionKey.Key10 = key10;
            return sessionKey;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Key1
        {
            get
            {
                return _Key1;
            }
            set
            {
                OnKey1Changing(value);
                ReportPropertyChanging("Key1");
                _Key1 = StructuralObject.SetValidValue(value, "Key1");
                ReportPropertyChanged("Key1");
                OnKey1Changed();
            }
        }
        private global::System.Int32 _Key1;
        partial void OnKey1Changing(global::System.Int32 value);
        partial void OnKey1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Key2
        {
            get
            {
                return _Key2;
            }
            set
            {
                OnKey2Changing(value);
                ReportPropertyChanging("Key2");
                _Key2 = StructuralObject.SetValidValue(value, "Key2");
                ReportPropertyChanged("Key2");
                OnKey2Changed();
            }
        }
        private global::System.Int32 _Key2;
        partial void OnKey2Changing(global::System.Int32 value);
        partial void OnKey2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Key3
        {
            get
            {
                return _Key3;
            }
            set
            {
                OnKey3Changing(value);
                ReportPropertyChanging("Key3");
                _Key3 = StructuralObject.SetValidValue(value, "Key3");
                ReportPropertyChanged("Key3");
                OnKey3Changed();
            }
        }
        private global::System.Int32 _Key3;
        partial void OnKey3Changing(global::System.Int32 value);
        partial void OnKey3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Key4
        {
            get
            {
                return _Key4;
            }
            set
            {
                OnKey4Changing(value);
                ReportPropertyChanging("Key4");
                _Key4 = StructuralObject.SetValidValue(value, "Key4");
                ReportPropertyChanged("Key4");
                OnKey4Changed();
            }
        }
        private global::System.Int32 _Key4;
        partial void OnKey4Changing(global::System.Int32 value);
        partial void OnKey4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Key5
        {
            get
            {
                return _Key5;
            }
            set
            {
                OnKey5Changing(value);
                ReportPropertyChanging("Key5");
                _Key5 = StructuralObject.SetValidValue(value, "Key5");
                ReportPropertyChanged("Key5");
                OnKey5Changed();
            }
        }
        private global::System.Int32 _Key5;
        partial void OnKey5Changing(global::System.Int32 value);
        partial void OnKey5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Key6
        {
            get
            {
                return _Key6;
            }
            set
            {
                OnKey6Changing(value);
                ReportPropertyChanging("Key6");
                _Key6 = StructuralObject.SetValidValue(value, "Key6");
                ReportPropertyChanged("Key6");
                OnKey6Changed();
            }
        }
        private global::System.Int32 _Key6;
        partial void OnKey6Changing(global::System.Int32 value);
        partial void OnKey6Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Key7
        {
            get
            {
                return _Key7;
            }
            set
            {
                OnKey7Changing(value);
                ReportPropertyChanging("Key7");
                _Key7 = StructuralObject.SetValidValue(value, "Key7");
                ReportPropertyChanged("Key7");
                OnKey7Changed();
            }
        }
        private global::System.Int32 _Key7;
        partial void OnKey7Changing(global::System.Int32 value);
        partial void OnKey7Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Key8
        {
            get
            {
                return _Key8;
            }
            set
            {
                OnKey8Changing(value);
                ReportPropertyChanging("Key8");
                _Key8 = StructuralObject.SetValidValue(value, "Key8");
                ReportPropertyChanged("Key8");
                OnKey8Changed();
            }
        }
        private global::System.Int32 _Key8;
        partial void OnKey8Changing(global::System.Int32 value);
        partial void OnKey8Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Key9
        {
            get
            {
                return _Key9;
            }
            set
            {
                OnKey9Changing(value);
                ReportPropertyChanging("Key9");
                _Key9 = StructuralObject.SetValidValue(value, "Key9");
                ReportPropertyChanged("Key9");
                OnKey9Changed();
            }
        }
        private global::System.Int32 _Key9;
        partial void OnKey9Changing(global::System.Int32 value);
        partial void OnKey9Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Key10
        {
            get
            {
                return _Key10;
            }
            set
            {
                OnKey10Changing(value);
                ReportPropertyChanging("Key10");
                _Key10 = StructuralObject.SetValidValue(value, "Key10");
                ReportPropertyChanged("Key10");
                OnKey10Changed();
            }
        }
        private global::System.Int32 _Key10;
        partial void OnKey10Changing(global::System.Int32 value);
        partial void OnKey10Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastKeyName
        {
            get
            {
                return _LastKeyName;
            }
            set
            {
                OnLastKeyNameChanging(value);
                ReportPropertyChanging("LastKeyName");
                _LastKeyName = StructuralObject.SetValidValue(value, true, "LastKeyName");
                ReportPropertyChanged("LastKeyName");
                OnLastKeyNameChanged();
            }
        }
        private global::System.String _LastKeyName;
        partial void OnLastKeyNameChanging(global::System.String value);
        partial void OnLastKeyNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Users_ToSessonKeys", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("lemonadeprojectModel.FK_Users_ToSessonKeys", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("lemonadeprojectModel.FK_Users_ToSessonKeys", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lemonadeprojectModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="passportId">Initial value of the PassportId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="passwordHash">Initial value of the PasswordHash property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="telephone">Initial value of the Telephone property.</param>
        /// <param name="isLocked">Initial value of the IsLocked property.</param>
        /// <param name="failCount">Initial value of the FailCount property.</param>
        /// <param name="sessionKeysScopeId">Initial value of the SessionKeysScopeId property.</param>
        public static User CreateUser(global::System.String id, global::System.String passportId, global::System.String name, global::System.String surname, global::System.String lastName, global::System.String passwordHash, global::System.String email, global::System.String telephone, global::System.Boolean isLocked, global::System.Int16 failCount, global::System.String sessionKeysScopeId)
        {
            User user = new User();
            user.Id = id;
            user.PassportId = passportId;
            user.Name = name;
            user.Surname = surname;
            user.LastName = lastName;
            user.PasswordHash = passwordHash;
            user.Email = email;
            user.Telephone = telephone;
            user.IsLocked = isLocked;
            user.FailCount = failCount;
            user.SessionKeysScopeId = sessionKeysScopeId;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassportId
        {
            get
            {
                return _PassportId;
            }
            set
            {
                OnPassportIdChanging(value);
                ReportPropertyChanging("PassportId");
                _PassportId = StructuralObject.SetValidValue(value, false, "PassportId");
                ReportPropertyChanged("PassportId");
                OnPassportIdChanged();
            }
        }
        private global::System.String _PassportId;
        partial void OnPassportIdChanging(global::System.String value);
        partial void OnPassportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false, "Surname");
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, false, "PasswordHash");
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, false, "Telephone");
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value, "IsLocked");
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private global::System.Boolean _IsLocked;
        partial void OnIsLockedChanging(global::System.Boolean value);
        partial void OnIsLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 FailCount
        {
            get
            {
                return _FailCount;
            }
            set
            {
                OnFailCountChanging(value);
                ReportPropertyChanging("FailCount");
                _FailCount = StructuralObject.SetValidValue(value, "FailCount");
                ReportPropertyChanged("FailCount");
                OnFailCountChanged();
            }
        }
        private global::System.Int16 _FailCount;
        partial void OnFailCountChanging(global::System.Int16 value);
        partial void OnFailCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SessionKeysScopeId
        {
            get
            {
                return _SessionKeysScopeId;
            }
            set
            {
                OnSessionKeysScopeIdChanging(value);
                ReportPropertyChanging("SessionKeysScopeId");
                _SessionKeysScopeId = StructuralObject.SetValidValue(value, false, "SessionKeysScopeId");
                ReportPropertyChanged("SessionKeysScopeId");
                OnSessionKeysScopeIdChanged();
            }
        }
        private global::System.String _SessionKeysScopeId;
        partial void OnSessionKeysScopeIdChanging(global::System.String value);
        partial void OnSessionKeysScopeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Account_ToUsers", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("lemonadeprojectModel.FK_Account_ToUsers", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("lemonadeprojectModel.FK_Account_ToUsers", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Orders_ToUsers", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("lemonadeprojectModel.FK_Orders_ToUsers", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("lemonadeprojectModel.FK_Orders_ToUsers", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Users_ToPassports", "Passports")]
        public Passport Passport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Passport>("lemonadeprojectModel.FK_Users_ToPassports", "Passports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Passport>("lemonadeprojectModel.FK_Users_ToPassports", "Passports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Passport> PassportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Passport>("lemonadeprojectModel.FK_Users_ToPassports", "Passports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Passport>("lemonadeprojectModel.FK_Users_ToPassports", "Passports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lemonadeprojectModel", "FK_Users_ToSessonKeys", "SessionKeys")]
        public SessionKey SessionKey
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionKey>("lemonadeprojectModel.FK_Users_ToSessonKeys", "SessionKeys").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionKey>("lemonadeprojectModel.FK_Users_ToSessonKeys", "SessionKeys").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SessionKey> SessionKeyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionKey>("lemonadeprojectModel.FK_Users_ToSessonKeys", "SessionKeys");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SessionKey>("lemonadeprojectModel.FK_Users_ToSessonKeys", "SessionKeys", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
